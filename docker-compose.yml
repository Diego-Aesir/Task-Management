version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
     - rabbit-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq-setup.sh:/usr/local/bin/rabbitmq-setup.sh
    healthcheck:
      test: ["CMD", "bash", "-c", "rabbitmqctl status && /usr/local/bin/rabbitmq-setup.sh"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

  database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      MSSQL_PID: Express
      SA_PASSWORD: "MyTestPass@word"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - rabbit-network
    volumes:
      - sql_data:/var/opt/mssql
    user: root

  user_api:
    build:
      context: ./UserManagementAPI
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=UserManagement;User Id=sa;Password=MyTestPass@word;TrustServerCertificate=True
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    networks:
      - rabbit-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_started
    volumes:
      - ./UserManagementAPI/appsettings.json:/app/appsettings.json

  task_api:
    build:
      context: ./TaskManagementAPI
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=database,1433;Database=TaskManagement;User=sa;Password=MyTestPass@word;TrustServerCertificate=True
      - ASPNETCORE_URLS=http://0.0.0.0:8090
    networks:
      - rabbit-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_started
    volumes:
      - ./TaskManagementAPI/appsettings.json:/app/appsettings.json


networks:
  rabbit-network:
    driver: bridge

volumes:
  rabbitmq_data:
  sql_data: